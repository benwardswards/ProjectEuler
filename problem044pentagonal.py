"""Pentagon numbers
  Show HTML problem content  
Problem 44
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
# """

from itertools import product
from typing import List, Set

MAX_PENTAGONAL_INDEX: int = 22000
pentagonalnumbers: List[int] = [
    n * (3 * n - 1) // 2 for n in range(1, MAX_PENTAGONAL_INDEX // 2)
]

# For a in set(A) is binary search , a in list(A) is linear time.
set_pentagonalnumbers: Set[int] = {
    n * (3 * n - 1) // 2 for n in range(1, MAX_PENTAGONAL_INDEX)
}

print("ipent, jpent, jpent + ipent, abs(jpent - ipent):")
minamum_diff: int = 10 ** 18  # set to approximaly infinity
for ipent in pentagonalnumbers:
    for jpent in pentagonalnumbers:
        if jpent < ipent:
            if (
                ipent + jpent in set_pentagonalnumbers
                and abs(ipent - jpent) in set_pentagonalnumbers
            ):
                print(ipent, jpent, jpent + ipent, abs(jpent - ipent))
                if abs(ipent - jpent) < minamum_diff:  #
                    minamum_diff = abs(ipent - jpent)

if minamum_diff == 10 ** 18:
    assert False, "No minimum found"

print("The miniumum difference is ", minamum_diff)
